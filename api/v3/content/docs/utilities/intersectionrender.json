{"data":{"properties":{"created_at":1633108516000,"custom_properties":{},"events":{"IntersectionRender":[{"name":"intersectionend","description":"<p>Fires whenever an intersection with the root viewport ends.</p>\n","types":["CustomEvent<IntersectionObserverEntry[]>"]},{"name":"intersectionstart","description":"<p>Fires whenever an intersection with the root viewport starts.</p>\n","types":["CustomEvent<IntersectionObserverEntry[]>"]}]},"identifier":"utilities/intersectionrender","modified_at":1633108516000,"properties":{"IntersectionRender":[{"name":"fallthrough","description":"<p>When the property is set, <code>IntersectionRender</code> will always render the child content in SSR environments, e.g. SvelteKit</p>\n","types":["boolean"]},{"name":"loading","description":"<p>When the property is set, <code>IntersectionRender</code> will always disable rendering of child content when not intersecting the root viewport.</p>\n","types":["eager"]},{"name":"root","description":"<p>Sets an Element which is an ancestor of the intended target, whose bounding rectangle will be considered the viewport. Any part of the target not visible in the visible area of the root is not considered visible.</p>\n","default":"document.body","types":["document.body","Document","Element"]},{"name":"root_margin","description":"<p>Sets a set of offsets to add to the root's bounding_box when calculating intersections, effectively shrinking or growing the root for calculation purposes.</p>\n","types":["string"]},{"name":"threshold","description":"<p>Sets a number(s) between 0.0 and 1.0, specifying a ratio of intersection area to total bounding box area for the observed target. A value of 0.0 means that even a single visible pixel counts as the target being visible. 1.0 means that the entire target element is visible.</p>\n","types":["number","number[]"]},{"name":"has_intersected","description":"<p>Exports a readonly property which is <code>true</code> whenever <code>IntersectionRender</code> has intersected the root viewport at least once.</p>\n","types":["readonly boolean"]},{"name":"is_intersecting","description":"<p>Exports a readonly property which is <code>true</code> whenever <code>IntersectionRender</code> is intersecting the root viewport.</p>\n","types":["readonly boolean"]}]},"sections":[{"identifier":"intersectionrender","level":1,"text":"IntersectionRender"},{"identifier":"imports","level":2,"text":"Imports"},{"identifier":"compatibility","level":2,"text":"Compatibility"},{"identifier":"eager","level":2,"text":"Eager"},{"identifier":"fallthrough","level":2,"text":"Fallthrough"}],"slots":{"IntersectionRender":[{"name":"default","description":"<p>Default unnamed slot.</p>\n","types":["{}"]}]},"snippets":[{"identifier":"intersectionrender-preview","script":"<script>\n    import {\n        Box,\n        Code,\n        IntersectionRender,\n        Spacer,\n        Transition,\n    } from \"@kahi-ui/framework\";\n\n    let is_intersecting = false;\n</script>\n\n<Spacer spacing=\"huge\" />\n<Spacer spacing=\"huge\" />\n\n<Spacer spacing=\"huge\" />\n<Spacer spacing=\"huge\" />\n\n<Box\n    palette={is_intersecting\n        ? \"affirmative\"\n        : \"negative\"}\n    padding=\"small\"\n>\n    Scroll down to watch this <Code>Box</Code> change when\n    the <Code>Box</Code> comes into view.\n</Box>\n\n<Spacer spacing=\"huge\" />\n<Spacer spacing=\"huge\" />\n\n<Spacer spacing=\"huge\" />\n<Spacer spacing=\"huge\" />\n\n<Spacer spacing=\"huge\" />\n<Spacer spacing=\"huge\" />\n\n<IntersectionRender\n    threshold={0.5}\n    bind:is_intersecting\n>\n    <Transition animation=\"scale\" variation=\"enter\">\n        <Box palette=\"inverse\" padding=\"small\">\n            I am in view!\n        </Box>\n    </Transition>\n</IntersectionRender>\n\n<Spacer spacing=\"huge\" />\n<Spacer spacing=\"huge\" />\n\n<Spacer spacing=\"huge\" />\n<Spacer spacing=\"huge\" />\n\n<Spacer spacing=\"huge\" />\n<Spacer spacing=\"huge\" />\n\n<Box\n    palette={is_intersecting\n        ? \"affirmative\"\n        : \"negative\"}\n    padding=\"small\"\n>\n    Scroll up to watch this <Code>Box</Code> change when\n    the <Code>Box</Code> comes into view.\n</Box>\n\n<Spacer spacing=\"huge\" />\n<Spacer spacing=\"huge\" />\n\n<Spacer spacing=\"huge\" />\n<Spacer spacing=\"huge\" />","syntax":"svelte","title":"IntersectionRender Preview"},{"identifier":"intersectionrender-imports","script":"<script>\n    import {IntersectionRender} from \"@kahi-ui/framework\";\n</script>","syntax":"svelte","title":"IntersectionRender Imports"},{"identifier":"intersectionrender-eager","script":"<script>\n    import {\n        Box,\n        Code,\n        IntersectionRender,\n        Spacer,\n        Transition,\n    } from \"@kahi-ui/framework\";\n\n    let is_intersecting = false;\n</script>\n\n<Spacer spacing=\"huge\" />\n<Spacer spacing=\"huge\" />\n\n<Spacer spacing=\"huge\" />\n<Spacer spacing=\"huge\" />\n\n<Box\n    palette={is_intersecting\n        ? \"affirmative\"\n        : \"negative\"}\n    padding=\"small\"\n>\n    Scroll down to watch this <Code>Box</Code> change when\n    the <Code>Box</Code> comes into view.\n</Box>\n\n<Spacer spacing=\"huge\" />\n<Spacer spacing=\"huge\" />\n\n<Spacer spacing=\"huge\" />\n<Spacer spacing=\"huge\" />\n\n<Spacer spacing=\"huge\" />\n<Spacer spacing=\"huge\" />\n\n<IntersectionRender\n    class=\"intersectionrender-eager\"\n    loading=\"eager\"\n    threshold={0.5}\n    bind:is_intersecting\n>\n    <Transition animation=\"scale\" variation=\"enter\">\n        <Box\n            class=\"intersectionrender-eager\"\n            palette=\"inverse\"\n            padding=\"small\"\n        >\n            I am in view!\n        </Box>\n    </Transition>\n</IntersectionRender>\n\n<Spacer spacing=\"huge\" />\n<Spacer spacing=\"huge\" />\n\n<Spacer spacing=\"huge\" />\n<Spacer spacing=\"huge\" />\n\n<Spacer spacing=\"huge\" />\n<Spacer spacing=\"huge\" />\n\n<Box\n    palette={is_intersecting\n        ? \"affirmative\"\n        : \"negative\"}\n    padding=\"small\"\n>\n    Scroll up to watch this <Code>Box</Code> change when\n    the <Code>Box</Code> comes into view.\n</Box>\n\n<Spacer spacing=\"huge\" />\n<Spacer spacing=\"huge\" />\n\n<Spacer spacing=\"huge\" />\n<Spacer spacing=\"huge\" />\n\n<style>\n    :global(.intersectionrender-eager) {\n        height: 40px;\n    }\n</style>","syntax":"svelte","title":"IntersectionRender Eager"},{"identifier":"intersectionrender-fallthrough","script":"<script>\n    import {\n        Box,\n        Code,\n        IntersectionRender,\n        Spacer,\n        Transition,\n    } from \"@kahi-ui/framework\";\n\n    let is_intersecting = false;\n</script>\n\n<Spacer spacing=\"huge\" />\n<Spacer spacing=\"huge\" />\n\n<Spacer spacing=\"huge\" />\n<Spacer spacing=\"huge\" />\n\n<Box\n    palette={is_intersecting\n        ? \"affirmative\"\n        : \"negative\"}\n    padding=\"small\"\n>\n    Scroll down to watch this <Code>Box</Code> change when\n    the <Code>Box</Code> comes into view.\n</Box>\n\n<Spacer spacing=\"huge\" />\n<Spacer spacing=\"huge\" />\n\n<Spacer spacing=\"huge\" />\n<Spacer spacing=\"huge\" />\n\n<Spacer spacing=\"huge\" />\n<Spacer spacing=\"huge\" />\n\n<IntersectionRender\n    threshold={0.5}\n    fallthrough\n    bind:is_intersecting\n>\n    <Transition animation=\"scale\" variation=\"enter\">\n        <Box palette=\"inverse\" padding=\"small\">\n            I am in view!\n        </Box>\n    </Transition>\n</IntersectionRender>\n\n<Spacer spacing=\"huge\" />\n<Spacer spacing=\"huge\" />\n\n<Spacer spacing=\"huge\" />\n<Spacer spacing=\"huge\" />\n\n<Spacer spacing=\"huge\" />\n<Spacer spacing=\"huge\" />\n\n<Box\n    palette={is_intersecting\n        ? \"affirmative\"\n        : \"negative\"}\n    padding=\"small\"\n>\n    Scroll up to watch this <Code>Box</Code> change when\n    the <Code>Box</Code> comes into view.\n</Box>\n\n<Spacer spacing=\"huge\" />\n<Spacer spacing=\"huge\" />\n\n<Spacer spacing=\"huge\" />\n<Spacer spacing=\"huge\" />","syntax":"svelte","title":"IntersectionRender Fallthrough"}],"title":"IntersectionRender"},"render":"<h1 id=\"intersectionrender\">IntersectionRender</h1>\n<p><code>IntersectionRender</code> disables rendering of child content before it has come into the root element's viewport at least once. Useful for lazy loading content besides media.</p>\n<iframe\n    class=\"snippet-repl\"\n    src=\"/repl/docs/utilities/intersectionrender/intersectionrender-preview?rotation=horizontal\"\n    sandbox=\"allow-popups-to-escape-sandbox allow-scripts allow-popups allow-forms allow-pointer-lock allow-top-navigation allow-modals allow-same-origin\" loading=\"lazy\"\n></iframe>\n<a href=\"/repl/docs/utilities/intersectionrender/intersectionrender-preview?rotation=horizontal\" hidden sveltekit:prefetch></a><h2 id=\"imports\">Imports</h2>\n<pre class=\"language-svelte snippet-highlight\"><code class=\"language-svelte\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>IntersectionRender<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@kahi-ui/framework\"</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre><h2 id=\"compatibility\">Compatibility</h2>\n<p>The Component only runs on clientside Browsers with Javascript enabled. So you need to plan a SSR-compatible fallback if using in a SSR scenario. It is also dependent on <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver\" target=\"_blank\" rel=\"noopener noreferrer\"><code>IntersectionObserver</code></a>.</p>\n<h2 id=\"eager\">Eager</h2>\n<blockquote data-palette=\"accent\">\n<p><strong>NOTE</strong>: It is good practice to give the <code>IntersectionRender</code> a fixed size that generally matches the child content when using this mode. Otherwise you can end up with janky scrolling.</p>\n</blockquote>\n<p>You can change the behavior of <code>IntersectionObserver</code> by passing in the <code>loading</code> attribute. Which will make the Component ALWAYS disable rendering when outside of the root viewport, not just on initial load.</p>\n<iframe\n    class=\"snippet-repl\"\n    src=\"/repl/docs/utilities/intersectionrender/intersectionrender-eager?rotation=horizontal\"\n    sandbox=\"allow-popups-to-escape-sandbox allow-scripts allow-popups allow-forms allow-pointer-lock allow-top-navigation allow-modals allow-same-origin\" loading=\"lazy\"\n></iframe>\n<a href=\"/repl/docs/utilities/intersectionrender/intersectionrender-eager?rotation=horizontal\" hidden sveltekit:prefetch></a><h2 id=\"fallthrough\">Fallthrough</h2>\n<blockquote data-palette=\"accent\">\n<p><strong>NOTE</strong>: The REPL runs on your Browser, so this will always render anyway.</p>\n</blockquote>\n<p>By default, <code>IntersectionRender</code> will never render when running in SSR environments. You can change it to always render in those environments via the <code>fallthrough</code> property.</p>\n<iframe\n    class=\"snippet-repl\"\n    src=\"/repl/docs/utilities/intersectionrender/intersectionrender-fallthrough?rotation=horizontal\"\n    sandbox=\"allow-popups-to-escape-sandbox allow-scripts allow-popups allow-forms allow-pointer-lock allow-top-navigation allow-modals allow-same-origin\" loading=\"lazy\"\n></iframe>\n<a href=\"/repl/docs/utilities/intersectionrender/intersectionrender-fallthrough?rotation=horizontal\" hidden sveltekit:prefetch></a>"}}