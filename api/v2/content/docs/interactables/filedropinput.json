{"data":{"properties":{"created_at":1635359402000,"custom_properties":{},"events":{"FileDropInput":[{"name":"click","description":"<p>Fires whenever the <code>FileDropInput</code> is clicked.</p>\n","types":["MouseEvent"]},{"name":"change","description":"<p>Fires whenever the <code>FileDropInput</code> value has changed.</p>\n","types":["MouseEvent"]},{"name":"input","description":"<p>Fires whenever the <code>FileDropInput</code> value has changed.</p>\n","types":["MouseEvent"]}]},"identifier":"interactables/filedropinput","modified_at":1635359402000,"properties":{"FileDropInput":[{"name":"accept","description":"<p>Sets <a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#accept\" target=\"_blank\" rel=\"noopener noreferrer\"><code>accept</code></a>, configuring which file types should be prompted for.</p>\n","types":["string"]},{"name":"multiple","description":"<p>Sets if the <code>FileDropInput</code> should accept multiple files as input.</p>\n","types":["boolean"]},{"name":"palette","description":"<p>Alters the displayed color scheme.</p>\n","types":["auto","inverse","inherit","accent","dark","light","alert","affirmative","negative"]}]},"sections":[{"identifier":"filedropinput","level":1,"text":"FileDropInput"},{"identifier":"imports","level":2,"text":"Imports"},{"identifier":"palette","level":1,"text":"Palette"}],"slots":{"FileDropInput":[{"name":"default","description":"<p>Default unnamed slot.</p>\n","types":["{}"]}]},"snippets":[{"identifier":"filedropinput-preview","script":"<script>\n    import {\n        Button,\n        FileDropInput,\n        Stack,\n        Text,\n        Tile,\n    } from \"@kahi-ui/framework\";\n\n    function on_change(event) {\n        if (!event.isTrusted) return;\n\n        const {target} = event;\n\n        files = [\n            ...files,\n            ...Array.from(target.files),\n        ];\n\n        target.value = \"\";\n    }\n\n    function on_clear_click(event) {\n        files = [];\n    }\n\n    function on_remove_click(event, file) {\n        files = files.filter(\n            (_file) => file !== _file\n        );\n    }\n\n    let files = [];\n</script>\n\n<FileDropInput\n    class=\"filedropinput-preview\"\n    multiple\n    on:change={on_change}\n>\n    <Stack spacing=\"medium\">\n        <Text is=\"strong\">&uparrow;</Text>\n\n        <Text>Drag-and-drop files here...</Text>\n    </Stack>\n</FileDropInput>\n\n{#if files.length > 0}\n    <Stack spacing=\"medium\" margin_y=\"medium\">\n        {#each files as file (file.name)}\n            <Tile.Container\n                sizing=\"small\"\n                palette=\"auto\"\n            >\n                <Tile.Section>\n                    <Tile.Header>\n                        {file.name}\n                    </Tile.Header>\n\n                    <Text>{file.type}</Text>\n                </Tile.Section>\n\n                <Tile.Footer>\n                    <Button\n                        size=\"small\"\n                        palette=\"negative\"\n                        on:click={(event) =>\n                            on_remove_click(\n                                event,\n                                file\n                            )}\n                    >\n                        x\n                    </Button>\n                </Tile.Footer>\n            </Tile.Container>\n        {/each}\n    </Stack>\n\n    <Stack alignment_x=\"right\">\n        <Button\n            variation=\"clear\"\n            palette=\"negative\"\n            on:click={on_clear_click}\n        >\n            Clear All\n        </Button>\n    </Stack>\n{/if}\n\n<style>\n    :global(.filedropinput-preview) :global(strong) {\n        font-size: 3em;\n    }\n</style>","syntax":"svelte","title":"FileDropInput Preview"},{"identifier":"filedropinput-imports","script":"<script>\n    import {FileDropInput} from \"@kahi-ui/framework\";\n</script>","syntax":"svelte","title":"FileDropInput Imports"},{"identifier":"filedropinput-palette","script":"<script>\n    import {\n        FileDropInput,\n        Mosaic,\n        Stack,\n        Text,\n    } from \"@kahi-ui/framework\";\n</script>\n\n<Mosaic\n    class=\"filedropinput-palette\"\n    sizing=\"medium\"\n    spacing=\"medium\"\n>\n    <FileDropInput>\n        <Stack spacing=\"medium\">\n            <Text is=\"strong\">&uparrow;</Text>\n            <Text>NEUTRAL</Text>\n        </Stack>\n    </FileDropInput>\n\n    <FileDropInput palette=\"accent\">\n        <Stack spacing=\"medium\">\n            <Text is=\"strong\">&uparrow;</Text>\n            <Text>ACCENT</Text>\n        </Stack>\n    </FileDropInput>\n\n    <FileDropInput palette=\"dark\">\n        <Stack spacing=\"medium\">\n            <Text is=\"strong\">&uparrow;</Text>\n            <Text>DARK</Text>\n        </Stack>\n    </FileDropInput>\n\n    <FileDropInput palette=\"light\">\n        <Stack spacing=\"medium\">\n            <Text is=\"strong\">&uparrow;</Text>\n            <Text>LIGHT</Text>\n        </Stack>\n    </FileDropInput>\n\n    <FileDropInput palette=\"alert\">\n        <Stack spacing=\"medium\">\n            <Text is=\"strong\">&uparrow;</Text>\n            <Text>ALERT</Text>\n        </Stack>\n    </FileDropInput>\n\n    <FileDropInput palette=\"affirmative\">\n        <Stack spacing=\"medium\">\n            <Text is=\"strong\">&uparrow;</Text>\n            <Text>AFFIRMATIVE</Text>\n        </Stack>\n    </FileDropInput>\n\n    <FileDropInput palette=\"negative\">\n        <Stack spacing=\"medium\">\n            <Text is=\"strong\">&uparrow;</Text>\n            <Text>NEGATIVE</Text>\n        </Stack>\n    </FileDropInput>\n</Mosaic>\n\n<style>\n    :global(.filedropinput-palette) :global(strong) {\n        font-size: 3em;\n    }\n</style>","syntax":"svelte","title":"FileDropInput Palette"}],"title":"FileDropInput"},"render":"<h1 id=\"filedropinput\">FileDropInput</h1>\n<blockquote data-palette=\"accent\">\n<p><strong>NOTE</strong>: Keep in mind, while the Component <em>does work</em> without Javascript, it cannot display its value like <code>FileInput</code> can without.</p>\n</blockquote>\n<p><code>FileDropInput</code> acts as a click-to-prompt and drag'n'drop file input stylized as an alternative to <code>FileInput</code>.</p>\n<iframe\n    class=\"snippet-repl\"\n    src=\"/repl/docs/interactables/filedropinput/filedropinput-preview?rotation=horizontal\"\n    sandbox=\"allow-popups-to-escape-sandbox allow-scripts allow-popups allow-forms allow-pointer-lock allow-top-navigation allow-modals allow-same-origin\" loading=\"lazy\"\n></iframe>\n<a href=\"/repl/docs/interactables/filedropinput/filedropinput-preview?rotation=horizontal\" hidden sveltekit:prefetch></a><h2 id=\"imports\">Imports</h2>\n<pre class=\"language-svelte snippet-highlight\"><code class=\"language-svelte\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>FileDropInput<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"@kahi-ui/framework\"</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre><h1 id=\"palette\">Palette</h1>\n<p>You can change the color palette of the <code>FileDropInput</code> via the <code>palette</code> property.</p>\n<iframe\n    class=\"snippet-repl\"\n    src=\"/repl/docs/interactables/filedropinput/filedropinput-palette?rotation=horizontal\"\n    sandbox=\"allow-popups-to-escape-sandbox allow-scripts allow-popups allow-forms allow-pointer-lock allow-top-navigation allow-modals allow-same-origin\" loading=\"lazy\"\n></iframe>\n<a href=\"/repl/docs/interactables/filedropinput/filedropinput-palette?rotation=horizontal\" hidden sveltekit:prefetch></a>"}}